{"version":3,"sources":["Header/index.js","Main/index.js","Form/Results/index.js","Form/DivButtons/index.js","Currencies/index.js","Form/index.js","Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Main","children","Results","result","amount","currencyFrom","value","toFixed","currencyTo","DivButtons","hideRates","toggleHideRates","onClick","type","currencies","id","name","Form","useState","setAmount","setCurrencyFrom","setCurrencyTo","setResult","onSubmit","event","preventDefault","valueFrom","find","valueTo","calculateResult","onChange","target","required","map","currency","min","step","slice","defaultValue","Footer","App","setHideRates","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3379ac84.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"header\">{title}</h1>\n    </header>\n)\n\nexport default Header;","const Main = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Main;","const Results = ({ result }) => (\n     !!result && (\n        <p className=\"form__results\">\n            {result.amount} {result.currencyFrom} to {result.value.toFixed(2)} {result.currencyTo}</p>\n    )\n);\n\nexport default Results;","const DivButtons = ({ hideRates, toggleHideRates }) => {\n\n    return (\n        <div className=\"form__display\">\n            <p><button className=\"form__button\">Przelicz waluty</button></p>\n            <p>\n                <button\n                    onClick={toggleHideRates}\n                    type=\"button\"\n                    className=\"form__button\"\n                >\n                    {`${hideRates === true ? \"Pokaż\" : \"Ukryj\"}`} Kursy\n                </button>\n            </p>\n        </div>\n    );\n};\n\nexport default DivButtons;","\n    const currencies = [\n        {\n          id: \"PLN\",\n          name: \"PLN\",\n          value: 1,\n        },\n        {\n          id: \"EUR\",\n          name: \"EUR\",\n          value: 4.45,\n        },\n        {\n          id: \"USD\",\n          name: \"USD\",\n          value: 4.2,\n        },\n        {\n          id: \"RUB\",\n          name: \"RUB\",\n          value: 0.2,\n        },\n      ];\n\n\nexport default currencies;","import React, { useState } from 'react';\nimport \"./style.css\";\nimport Results from \"./Results\";\nimport DivButtons from \"./DivButtons\";\nimport currencies from \"../Currencies\";\n\n\nconst Form = ({ toggleHideRates, hideRates }) => {\n\n    const [amount, setAmount] = useState(\"\");\n    const [currencyFrom, setCurrencyFrom] = useState(currencies[0].name);\n    const [currencyTo, setCurrencyTo] = useState(currencies[1].name);\n    const [result, setResult] = useState();\n\n    const calculateResult = (amount, valueFrom, valueTo) => +amount * +valueFrom / +valueTo;\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n\n        const valueFrom = currencies.find(({ name }) => name === currencyFrom);\n        const valueTo = currencies.find(({ name }) => name === currencyTo);\n        const result = calculateResult(amount, valueFrom.value, valueTo.value);\n        setResult({ amount: amount, currencyFrom: currencyFrom, value: result, currencyTo: currencyTo });\n        setAmount(\"\");\n    };\n\n    return (\n        <>\n            <form className=\"form\" onSubmit={onFormSubmit}>\n                <fieldset className=\"form__fieldSet\">\n                        < label >\n                            Wybierz walutę do przeliczenia:\n                            <select\n                                value={currencyFrom}\n                                onChange={({ target }) => setCurrencyFrom(target.value)}\n                                name=\"currencyFrom\"\n                                className=\"form__field form__field--background\"\n                                required\n                            >\n                                {currencies.map(currency => (\n                                    <option key={currency.id}>\n                                        {currency.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label >\n                        < label >\n                            Wybierz walutę do przeliczenia:\n                            <select\n                                value={currencyTo}\n                                onChange={({ target }) => setCurrencyTo(target.value)}\n                                name=\"currencyTo\"\n                                className=\"form__field form__field--background\"\n                                required\n                            >\n                                {currencies.map(currency => (\n                                    <option key={currency.id}>\n                                        {currency.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label >\n                    <label>Wpisz kwotę\n                    <input\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            type=\"number\"\n                            className=\"form__field\"\n                            min=\"0.01\"\n                            required\n                            step=\"0.01\"\n                        />\n                    </label>\n                </fieldset>\n                <DivButtons hideRates={hideRates} toggleHideRates={toggleHideRates} />\n                <Results\n                    result={result}\n                    amount={amount} />\n                <fieldset className={`form__fieldset ${hideRates === true ? \"form__currency--hidden\" : \"\"}`}>\n                    <legend>Kursy walut</legend>\n                    {currencies.slice(1).map(currency =>\n                        <label>\n                            {currency.name}\n                            <input\n                                onChange={(event) => currency.value = event.target.value}\n                                key={currency.id}\n                                type=\"number\"\n                                className=\"form__field\"\n                                min=\"0.01\"\n                                step=\"0.01\"\n                                defaultValue={currency.value}\n                            />\n                        </label>\n                    )}\n                </fieldset>\n            </form>\n\n        </>\n    );\n};\n\nexport default Form;","import \"./style.css\";\n\nconst Footer = () => (\n    <footer className=\"footer\">Designed by Wojciech Bylica Arts</footer>\n);\n\nexport default Footer;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n\n  const [hideRates, setHideRates] = useState(true);\n\n  const toggleHideRates = () => {\n    setHideRates(hideRates => !hideRates);\n  };\n\n  return (\n    <>\n      <Header title=\"Przelicznik walut\" />\n      <Main>\n        <Form\n          hideRates={hideRates}\n          toggleHideRates={toggleHideRates}\n        >\n        </Form>\n      </Main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}