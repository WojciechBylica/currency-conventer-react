{"version":3,"sources":["Header/index.js","Footer/index.js","Main/index.js","Form/Results/index.js","Fieldset/index.js","Form/index.js","DivButtons/index.js","FormShowOrSetCurrencies/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Footer","Main","children","Results","result","amount","currencyFrom","value","toFixed","currencyTo","Fieldset","legend","Form","currencies","divButtons","useState","setAmount","setCurrencyFrom","setCurrencyTo","setResult","onSubmit","event","preventDefault","valueFrom","find","name","valueTo","calculateResult","id","onChange","target","required","map","currency","type","min","step","DivButtons","hideRates","toggleHideRates","onClick","FormShowOrSetCurrencies","setNewCurrencyValue","toggleCurrencyValue","onInput","slice","defaultValue","App","setCurrencies","newCurrencyValue","setHideRates","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08d9a53d.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"header\">{title}</h1>\n    </header>\n)\n\nexport default Header;","import \"./style.css\";\n\nconst Footer = () => (\n    <footer className=\"footer\">Designed by Wojciech Bylica Arts</footer>\n);\n\nexport default Footer;","const Main = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Main;","const Results = ({ result }) => (\n     !!result && (\n        <p className=\"form__results\">\n            {result.amount} {result.currencyFrom} to {result.value.toFixed(2)} {result.currencyTo}</p>\n    )\n);\n\nexport default Results;","const Fieldset = ({children, legend}) => {\nreturn (\n    <fieldset className=\"form__fieldset\">\n        <legend>{legend}</legend>\n        {children}\n    </fieldset>\n)\n};\n\n\n\nexport default Fieldset;","import React, { useState } from 'react';\nimport \"./style.css\";\nimport Results from \"./Results\";\nimport Fieldset from \"../Fieldset\";\n\n\nconst Form = ({ currencies, divButtons, }) => {\n\n    const [amount, setAmount] = useState(\"\");\n    const [currencyFrom, setCurrencyFrom] = useState(\"PLN\");\n    const [currencyTo, setCurrencyTo] = useState(\"EUR\");\n    const [result, setResult] = useState();\n\n    const calculateResult = (amount, valueFrom, valueTo) => amount * valueFrom / valueTo;\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        const valueFrom = currencies.find(({ name }) => name === currencyFrom);\n        const valueTo = currencies.find(({ name }) => name === currencyTo);\n        const result = calculateResult(amount, valueFrom.value, valueTo.value);\n        setResult({ amount: amount, currencyFrom: valueFrom.id, value: result, currencyTo: valueTo.id });\n        setAmount(\"\");\n    };\n\n    return (\n        <>\n            <form className=\"form\" onSubmit={onFormSubmit}>\n                <Fieldset>\n                    <>\n                        < label >\n                            \"Wybierz walutę do przeliczenia:\"\n                            <select\n                                value={currencyFrom}\n                                onChange={({ target }) => setCurrencyFrom(target.value)}\n                                name=\"currencyFrom\"\n                                className=\"form__field form__field--background\"\n                                required\n                            >\n                                {currencies.map(currency => (\n                                    <option key={currency.id}>\n                                        {currency.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label >\n                        < label >\n                            \"Wybierz walutę do przeliczenia:\"\n                        <select\n                                value={currencyTo}\n                                onChange={({ target }) => setCurrencyTo(target.value)}\n                                name=\"currencyTo\"\n                                className=\"form__field form__field--background\"\n                                required\n                            >\n                                {currencies.map(currency => (\n                                    <option key={currency.id}>\n                                        {currency.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label >\n                    </>\n                    <label>Wpisz kwotę\n                    <input\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            type=\"number\"\n                            className=\"form__field\"\n                            min=\"0.01\"\n                            required\n                            step=\"0.01\"\n                        />\n                    </label>\n                </Fieldset>\n                {divButtons}\n                <Results\n                    result={result}\n                    amount={amount} />\n            </form>\n\n        </>\n    );\n};\n\nexport default Form;","const DivButtons = ({ hideRates, toggleHideRates }) => {\n\n    return (\n        <div className=\"form__display\">\n            <p><button className=\"form__button\">Przelicz waluty</button></p>\n            <p>\n                <button\n                    onClick={toggleHideRates}\n                    type=\"button\"\n                    className=\"form__button\"\n                >\n                    {`${hideRates === true ? \"Pokaż\" : \"Ukryj\"}`} Kursy\n                </button>\n            </p>\n        </div>\n    );\n};\n\nexport default DivButtons;","import { useState } from \"react\";\nimport Fieldset from \"../Fieldset\"\nconst FormShowOrSetCurrencies = ({ currencies, hideRates, setNewCurrencyValue, toggleCurrencyValue }) => {\n\n    \n\n    const onFormInput = (event) => {\n        setNewCurrencyValue(event.target.value)\n        // console.log(newCurrencyValue)\n    }\n\n    return (\n        <>\n            <form\n                onInput={onFormInput}\n                className={` ${hideRates === true ? \"form__currency--hidden\" : \"\"}`}>\n                <Fieldset legend=\"Kursy walut\">\n\n                    {currencies.slice(1).map(currency =>\n                        <label>\n                            {currency.name}\n                            <input\n                                onInput={() => toggleCurrencyValue(currency.id)}\n                                key={currency.id}\n                                type=\"number\"\n                                className=\"form__field\"\n                                min=\"0.01\"\n                                step=\"0.01\"\n                                defaultValue={currency.value}\n                            // readOnly={true}\n                            />\n                        </label>\n                    )}\n                </Fieldset>\n            </form>\n        </>\n    );\n};\n\nexport default FormShowOrSetCurrencies;\n\n\n\n\n","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport Form from \"./Form\";\nimport DivButtons from \"./DivButtons\";\nimport FormShowOrSetCurrencies from \"./FormShowOrSetCurrencies\";\n\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([\n    {\n      id: \"PLN\",\n      name: \"PLN\",\n      value: 1,\n    },\n    {\n      id: \"EUR\",\n      name: \"EUR\",\n      value: 4.45,\n    },\n    {\n      id: \"USD\",\n      name: \"USD\",\n      value: 4.2,\n    },\n    {\n      id: \"RUB\",\n      name: \"RUB\",\n      value: 0.2,\n    },\n  ]);\n\n  const [newCurrencyValue, setNewCurrencyValue] = useState();\n\n  const toggleCurrencyValue = (id) => {\n    setCurrencies(currencies => currencies.map(currency => {\n      if (currency.id === id) {\n        return { ...currency, value: newCurrencyValue };\n      }\n\n      return currency;\n    }));\n  };\n\n  const [hideRates, setHideRates] = useState(true);\n\n  const toggleHideRates = () => {\n    setHideRates(hideRates => !hideRates);\n  };\n\n\n  return (\n    <>\n      <Header title=\"Przelicznik walut\" />\n      <Main>\n        <Form\n          currencies={currencies}\n          divButtons={<DivButtons hideRates={hideRates} toggleHideRates={toggleHideRates} />}\n        >\n        </Form>\n        <FormShowOrSetCurrencies\n          setNewCurrencyValue={setNewCurrencyValue}\n          toggleCurrencyValue={toggleCurrencyValue}\n          currencies={currencies}\n          hideRates={hideRates}\n          // setCurrencies={setCurrencies}\n          toggleHideRates={toggleHideRates}\n        >\n        </FormShowOrSetCurrencies>\n\n      </Main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}