{"version":3,"sources":["Header/styled.js","Header/index.js","Clock/styled.js","Clock/index.js","Clock/useClock.js","Form/Results/styled.js","Form/Results/index.js","Form/Buttons/styled.js","Form/Buttons/index.js","Form/styled.js","Form/Rates/styled.js","Form/Rates/index.js","Form/index.js","Form/useForm.js","Loader/styled.js","Loader/index.js","images/imageLoader.gif","images/image.png","styled.js","App.js","useDataFromAPI.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["StyledHeader","styled","h1","Header","title","Wrapper","div","Clock","currentDate","useState","Date","setCurrentDate","useEffect","intervalId","setInterval","clearInterval","useClock","toLocaleDateString","undefined","month","weekday","day","year","hour","minute","second","formatDate","Result","p","theme","elementBorder","elementBorderRadius","backgroundColor","white","Results","result","amount","currencyFrom","value","toFixed","currencyTo","ButtonsWrapper","Button","button","melrose","melroseHover","melroseActive","Buttons","hideRates","toggleHideRates","onClick","type","StyledForm","form","Fieldset","fieldset","FormField","select","Input","AnimatedDollar","span","TableWrapper","StyledTable","table","StyledCaption","caption","StyledRow","tr","moonRaker","StyledCurrency","th","Rates","rates","ratesData","Object","keys","slice","map","rate","currency","code","mid","Form","setAmount","setCurrencyFrom","setCurrencyTo","setResult","useForm","ratesFrom","ratesTo","setHideRates","date","onSubmit","event","preventDefault","valueFrom","valueTo","calculateResult","onChange","target","name","required","as","min","step","StyledLoader","StyledImage","img","Loader","body","source","alt","src","StyledDiv","StyledFooter","App","status","setRatesData","setTimeout","a","axios","get","response","data","ratesWithPLN","effectiveDate","no","useDataFromAPI","imageLoader","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","mystic","Body","bodyBackgroundImage","quillGray","document","getElementById"],"mappings":"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","file":"static/js/main.b1eac5eb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.h1`\n    text-align: center;\n    margin: 0;\n    padding: 16px;\n`;","import { StyledHeader } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <header>\n        <StyledHeader>{title}</StyledHeader>\n    </header>\n);\nexport default Header;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    font-size: 12px;\n    font-family: monospace;\n`;","\nimport { Wrapper } from \"./styled\";\nimport { useClock } from \"./useClock\";\n\nconst Clock = () => {\n    const currentDate = useClock()\n    const formatDate = (currentDate) => currentDate.toLocaleDateString(undefined, {\n        month: \"long\",\n        weekday: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    return (\n        <Wrapper>\n            Dzisiaj jest: {formatDate(currentDate)}\n        </Wrapper>\n    );\n};\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useClock = () => {\n    const [currentDate, setCurrentDate] = useState(new Date())\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setCurrentDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId)\n        };\n    }, []);\n\n    return currentDate;\n};","import styled from \"styled-components\";\n\nexport const Result = styled.p`\n    text-align: center;\n    border: ${({ theme }) => theme.elementBorder};\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    margin: 0px 2px;\n    background-color: ${({ theme }) => theme.backgroundColor.white};\n    word-break: break-word;\n`;","import { Result } from \"./styled\";\n\nconst Results = ({ result }) => (\n    !!result && (\n        <Result>\n            {result.amount} {result.currencyFrom} to {result.value.toFixed(2)} {result.currencyTo}\n        </Result>\n    )\n);\nexport default Results;","import styled from \"styled-components\";\n\nexport const ButtonsWrapper = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n    margin: 0;\n    background-color: ${({ theme }) => theme.backgroundColor.melrose};\n    width: 100%;\n    border: ${({ theme }) => theme.elementBorder};\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    box-shadow: 2px 2px 5px #1d1b1b;\n    user-select: none;\n\n    &:hover {\n        background-color: ${({ theme }) => theme.backgroundColor.melroseHover};\n}\n    &:active {\n        background-color: ${({ theme }) => theme.backgroundColor.melroseActive};\n        box-shadow: none;\n}\n`;","import { ButtonsWrapper, Button } from \"./styled\";\n\nconst Buttons = ({ hideRates, toggleHideRates }) => {\n    return (\n        <ButtonsWrapper>\n            <Button>Przelicz waluty</Button>\n            <Button\n                onClick={toggleHideRates}\n                type=\"button\"\n            >\n                {`${hideRates ? \"Pokaż\" : \"Ukryj\"}`} Kursy\n            </Button>\n        </ButtonsWrapper>\n    );\n};\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    margin: 10px 0px;\n`;\n\nexport const Fieldset = styled.fieldset`\n    width: 100%;\n    border: ${({ theme }) => theme.elementBorder};\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    box-shadow: 2px 2px 5px #1d1b1b;\n`;\n\nexport const FormField = styled.select`\n    margin: 5px 0;\n    width: 100%;\n    padding: 5px;\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    border: ${({ theme }) => theme.elementBorder};\n    background-color: ${({ theme }) => theme.backgroundColor.white};\n    cursor: pointer;\n`;\n\nexport const Input = styled(FormField)`\n    background-color: ${({ theme }) => theme.backgroundColor.white};\n    cursor: text;\n`;\n\nexport const AnimatedDollar = styled.span`\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 100px;\n    width: 100px;\n    height: 100px;\n    color: #e0e075;\n    text-shadow: 2px 2px 4px gold;\n    background: #ffff0030;\n    border: 2px solid #ffd700f7;\n    border-radius: 100px;\n    box-shadow: 0 2px 1px #ffd70000;\n    animation-name: rotationSafari;\n    animation-duration: 5s;\n    animation-iteration-count: infinite;\n    animation-timing-function: linear;\n    animation-fill-mode: backwards;\n    user-select: none;\n\n    &:hover {\n        animation-play-state: paused;\n    }\n\n    @keyframes rotationSafari {\n        from {\n            transform: rotate3d(0, 1, 0, 0deg);\n        }\n        50% {\n            transform: rotate3d(0, 1, 0, 180deg);\n        }\n        100% {\n            transform: rotate3d(0, 1, 0, 360deg);\n        }\n    }\n`;","import styled from \"styled-components\";\n\nexport const TableWrapper = styled.div`\n    overflow: auto;\n`;\n\nexport const StyledTable = styled.table`\n    border-collapse: collapse;\n    width: 100%;\n`;\n\nexport const StyledCaption = styled.caption`\n    caption-side: bottom;\n    margin-top: 10px;\n`;\n\nexport const StyledRow = styled.tr`\n    border-bottom: 1px solid black;\n\n    &:nth-child(even) {\n        background-color: ${({ theme }) => theme.backgroundColor.moonRaker};\n    };\n\n    &:hover{\n        background-color: ${({ theme }) => theme.backgroundColor.melroseActive};\n    };\n`;\n\nexport const StyledCurrency = styled.th`\nfont-weight: normal;\n`;","import { TableWrapper, StyledTable, StyledCaption, StyledRow, StyledCurrency } from \"./styled\";\n\nconst Rates = ({ rates, ratesData }) => (\n    <TableWrapper>\n        <StyledTable>\n            <StyledCaption>{ratesData.table}</StyledCaption>\n            <thead>\n                <StyledRow>\n                    <th>waluta</th>\n                    <th>symbol</th>\n                    <th>średni kurs</th>\n                </StyledRow>\n            </thead>\n\n            <tbody>\n                {Object.keys(rates).slice(1).map(rate =>\n                    <StyledRow key={rate}>\n                        <StyledCurrency>{rates[rate].currency}</StyledCurrency>\n                        <td>{rates[rate].code}</td>\n                        <td> {rates[rate].mid}</td>\n                    </StyledRow>\n                )\n                }\n            </tbody>\n        </StyledTable>\n    </TableWrapper>\n);\n\nexport default Rates;","import Results from \"./Results\";\nimport Buttons from \"./Buttons\";\nimport { StyledForm, Fieldset, FormField, Input, AnimatedDollar } from './styled';\nimport Rates from \"./Rates\";\nimport { useForm } from './useForm';\nimport { Wrapper } from \"../Clock/styled\";\nimport { useState } from \"react\";\nimport { StyledHeader } from \"../Header/styled\";\n\nconst Form = ({ ratesData }) => {\n    const {\n        currencyFrom,\n        currencyTo,\n        setCurrencyFrom,\n        setCurrencyTo,\n        amount,\n        setAmount,\n        setResult,\n        result,\n    } = useForm();\n\n    const rates = ratesData.rates;\n    const ratesFrom = rates[currencyFrom];\n    const ratesTo = rates[currencyTo];\n    const [hideRates, setHideRates] = useState(true);\n    const toggleHideRates = () => {\n        setHideRates(hideRates => !hideRates);\n    };\n\n    const calculateResult = (amount, valueFrom, valueTo) => +amount * +valueFrom / +valueTo;\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const valueFrom = +ratesFrom.mid;\n        const valueTo = +ratesTo.mid;\n        const result = calculateResult(amount, valueFrom, valueTo);\n\n        setResult({\n            amount: amount,\n            currencyFrom: ratesFrom.code,\n            value: result,\n            currencyTo: ratesTo.code\n        });\n\n        setAmount(\"\");\n    };\n\n    return (\n        <>\n            <Wrapper> Aktualizacja kursów: {ratesData.date}</Wrapper>\n            <Wrapper>{ratesData.table}</Wrapper>\n            <StyledForm onSubmit={onFormSubmit}>\n                <Fieldset>\n                    <label>\n                        Wybierz walutę do przeliczenia:\n                        <FormField\n                            value={currencyFrom}\n                            onChange={({ target }) => setCurrencyFrom(target.value)}\n                            name=\"currencyFrom\"\n                            required\n                        >\n                            {Object.keys(rates).map(currencyFrom => (\n                                <option\n                                    key={currencyFrom}\n                                    value={currencyFrom}\n                                >\n                                    {rates[currencyFrom].currency}{\" (\"}{rates[currencyFrom].code})\n                                </option>\n                            ))}\n                        </FormField>\n                    </label >\n\n                    <label>\n                        Wybierz walutę docelową:\n                        <FormField\n                            value={currencyTo}\n                            onChange={({ target }) => setCurrencyTo(target.value)}\n                            name=\"currencyTo\"\n                            required\n                        >\n                            {Object.keys(rates).map(currencyTo => (\n                                <option\n                                    key={currencyTo}\n                                    value={currencyTo}\n                                >\n                                    {rates[currencyTo].currency}{\" (\"}{rates[currencyTo].code})\n                                </option>\n                            ))}\n                        </FormField>\n                    </label >\n\n                    <label>\n                        Wpisz kwotę:\n                        <Input as=\"input\"\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            type=\"number\"\n                            min=\"0.01\"\n                            required\n                            step=\"0.01\"\n                        />\n                    </label>\n                </Fieldset>\n                <Buttons hideRates={hideRates} toggleHideRates={toggleHideRates} />\n                <Results\n                    result={result}\n                    amount={amount}\n                />\n                {hideRates\n                    ? <AnimatedDollar>$</AnimatedDollar>\n                    : <>\n                        <StyledHeader as=\"h2\">Kursy walut</StyledHeader>\n                        <Rates rates={rates} ratesData={ratesData} />\n                    </>\n                }\n            </StyledForm>\n        </>\n    );\n};\n\nexport default Form;","import { useState } from \"react\";\n\nexport const useForm = () => {\n    const [amount, setAmount] = useState(\"\");\n    const initialValueFrom = \"0\";\n    const initialValueTo = \"2\";\n    const [currencyFrom, setCurrencyFrom] = useState(initialValueFrom);\n    const [currencyTo, setCurrencyTo] = useState(initialValueTo);\n    const [result, setResult] = useState();\n\n    return {\n        currencyFrom,\n        currencyTo,\n        setCurrencyFrom,\n        setCurrencyTo,\n        amount,\n        setAmount,\n        setResult,\n        result,\n    };\n};","import styled from \"styled-components\";\n\nexport const StyledLoader = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledImage = styled.img`\n    max-width: 75%;\n`;","import { StyledLoader, StyledImage } from \"./styled\";\n\nconst Loader = ({ body, source, alt }) => (\n    <>\n        <StyledLoader>\n            <p>{body}</p>\n            <StyledImage src={source} alt={alt} />\n        </StyledLoader>\n    </>\n);\nexport default Loader;","export default __webpack_public_path__ + \"static/media/imageLoader.b543d30c.gif\";","export default __webpack_public_path__ + \"static/media/image.761c5393.png\";","import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\n    margin: 0 auto;\n    max-width: 600px;\n`;\n\nexport const StyledFooter = styled.p`\n    text-align: center;\n    font-size: 10px;\n    background: white;\n    box-shadow: 2px 2px 5px #1d1b1b;\n`;","import Header from \"./Header\";\nimport Clock from \"./Clock\";\nimport Form from \"./Form\";\nimport Loader from \"./Loader\";\nimport { useDataFromAPI } from \"./useDataFromAPI\";\nimport imageLoader from \"./images/imageLoader.gif\";\nimport image from \"./images/image.png\";\nimport { StyledDiv, StyledFooter } from \"./styled\";\n\nfunction App() {\n  const ratesData = useDataFromAPI()\n\n  return (\n    <>\n      <StyledDiv>\n        <Header title=\"Przelicznik walut\" />\n        {ratesData.status === \"loading\" &&\n          <Loader\n            body=\"Ładuję kursy walut z Narodowego Banku Polskiego...\"\n            source={imageLoader}\n            alt=\"imageLoader\"\n          />\n        }\n        {ratesData.status === \"error\" &&\n          <Loader\n            body=\"Coś poszło nie tak... Sprawdź połączenie z internetem i spróbuj ponownie!\"\n            source={image}\n            alt=\"errorImage\"\n          />\n        }\n        {ratesData.status === \"success\" &&\n          <>\n            <main>\n              <Clock />\n              <Form ratesData={ratesData} />\n            </main>\n            <StyledFooter>Designed by Wojciech Bylica Arts</StyledFooter>\n          </>\n        }\n      </StyledDiv>\n    </>\n  );\n};\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nexport const useDataFromAPI = () => {\n    const [ratesData, setRatesData] = useState({\n        date: null,\n        table: null,\n        rates: null,\n        status: \"loading\",\n    })\n    useEffect(() => {\n        const getratesData = async () => {\n            try {\n                const NBPAPI = 'https://api.nbp.pl/api/exchangerates/tables/a/';\n                const response = await axios.get(NBPAPI);\n                const rates = response.data[0].rates;\n                const ratesWithPLN = [\n                    {\n                        code: \"PLN\",\n                        currency: \"polski złoty\",\n                        mid: 1,\n                    },\n                    ...rates,\n                ];\n                setRatesData({\n                    date: response.data[0].effectiveDate,\n                    table: response.data[0].no,\n                    rates: ratesWithPLN,\n                    status: \"success\",\n                });\n            } catch (error) {\n                setRatesData({ status: \"error\" });\n            };\n        };\n        setTimeout(getratesData, 2000);\n    }, []);\n    return ratesData;\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n${normalize}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n  background-repeat: no-repeat;\n  background-position: top; \n  background-color: ${({ theme }) => theme.backgroundColor.melrose};\n  font-family: 'Libre Franklin', sans-serif;\n  padding: 10px;\n  font-size: 16px;\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\"\nimport { GlobalStyle } from \"./GlobalStyle\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    backgroundColor: {\n        melrose: \"hsl(230deg 98% 85%)\",\n        melroseHover: \"hsl(230deg 98% 80%)\",\n        melroseActive: \"hsl(230deg 98% 75%)\",\n        moonRaker: \"rgb(211 217 247)\",\n        white: \"white\",\n        mystic: \"rgb(231 239 239 / 75%)\",\n    },\n    Body: {\n        bodyBackgroundImage: \"url(\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Money-2180330_1920.jpg/1024px-Money-2180330_1920.jpg\\\")\",\n        quillGray: \"#e5e5e3\",\n    },\n    elementBorder: \"1px solid grey\",\n    elementBorderRadius: \"3px\",\n};"],"sourceRoot":""}