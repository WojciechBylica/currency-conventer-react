{"version":3,"sources":["Header/index.js","Main/index.js","Form/Results/index.js","Form/Fieldset/index.js","Form/DivButtons/index.js","Form/index.js","Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Main","children","Results","result","amount","currencyFrom","value","toFixed","currencyTo","Fieldset","legend","DivButtons","hideRates","toggleHideRates","onClick","type","Form","currencies","setNewCurrencyValue","toggleCurrencyValue","useState","setAmount","name","setCurrencyFrom","setCurrencyTo","setResult","onSubmit","event","preventDefault","valueFrom","find","valueTo","calculateResult","onChange","target","required","map","currency","id","min","step","slice","Footer","App","setCurrencies","newCurrencyValue","setHideRates","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3614f344.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"header\">{title}</h1>\n    </header>\n)\n\nexport default Header;","const Main = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Main;","const Results = ({ result }) => (\n     !!result && (\n        <p className=\"form__results\">\n            {result.amount} {result.currencyFrom} to {result.value.toFixed(2)} {result.currencyTo}</p>\n    )\n);\n\nexport default Results;","const Fieldset = ({children, legend}) => {\nreturn (\n    <fieldset className=\"form__fieldset\">\n        <legend>{legend}</legend>\n        {children}\n    </fieldset>\n)\n};\n\n\n\nexport default Fieldset;","const DivButtons = ({ hideRates, toggleHideRates }) => {\n\n    return (\n        <div className=\"form__display\">\n            <p><button className=\"form__button\">Przelicz waluty</button></p>\n            <p>\n                <button\n                    onClick={toggleHideRates}\n                    type=\"button\"\n                    className=\"form__button\"\n                >\n                    {`${hideRates === true ? \"Pokaż\" : \"Ukryj\"}`} Kursy\n                </button>\n            </p>\n        </div>\n    );\n};\n\nexport default DivButtons;","import React, { useState } from 'react';\nimport \"./style.css\";\nimport Results from \"./Results\";\nimport Fieldset from \"./Fieldset\";\nimport DivButtons from \"./DivButtons\";\n\n\nconst Form = ({ currencies, toggleHideRates, hideRates, setNewCurrencyValue, toggleCurrencyValue }) => {\n\n    const [amount, setAmount] = useState(\"\");\n    const [currencyFrom, setCurrencyFrom] = useState(currencies[0].name);\n    const [currencyTo, setCurrencyTo] = useState(currencies[1].name);\n    const [result, setResult] = useState();\n\n    const calculateResult = (amount, valueFrom, valueTo) => +amount * +valueFrom / +valueTo;\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n\n        const valueFrom = currencies.find(({ name }) => name === currencyFrom);\n        const valueTo = currencies.find(({ name }) => name === currencyTo);\n        const result = calculateResult(amount, valueFrom.value, valueTo.value);\n        setResult({ amount: amount, currencyFrom: currencyFrom, value: result, currencyTo: currencyTo });\n        setAmount(\"\");\n    };\n\n    return (\n        <>\n            <form className=\"form\" onSubmit={onFormSubmit}>\n                <Fieldset>\n                    <>\n                        < label >\n                            \"Wybierz walutę do przeliczenia:\"\n                            <select\n                                value={currencyFrom}\n                                onChange={({ target }) => setCurrencyFrom(target.value)}\n                                name=\"currencyFrom\"\n                                className=\"form__field form__field--background\"\n                                required\n                            >\n                                {currencies.map(currency => (\n                                    <option key={currency.id}>\n                                        {currency.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label >\n                        < label >\n                            \"Wybierz walutę do przeliczenia:\"\n                        <select\n                                value={currencyTo}\n                                onChange={({ target }) => setCurrencyTo(target.value)}\n                                name=\"currencyTo\"\n                                className=\"form__field form__field--background\"\n                                required\n                            >\n                                {currencies.map(currency => (\n                                    <option key={currency.id}>\n                                        {currency.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </label >\n                    </>\n                    <label>Wpisz kwotę\n                    <input\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            type=\"number\"\n                            className=\"form__field\"\n                            min=\"0.01\"\n                            required\n                            step=\"0.01\"\n                        />\n                    </label>\n                </Fieldset>\n                <DivButtons hideRates={hideRates} toggleHideRates={toggleHideRates}/>\n                <Results\n                    result={result}\n                    amount={amount} />\n                <fieldset  className={`form__fieldset ${hideRates === true ? \"form__currency--hidden\" : \"\"}`}>\n                                    <legend>Kursy walut</legend>\n                    {currencies.slice(1).map(currency =>\n                        <label>\n                            {currency.name}\n                            <input\n                                onChange={(event) => {\n                                    setNewCurrencyValue(event.target.value)\n                                    toggleCurrencyValue(currency.id)\n                                }}\n                                key={currency.id}\n                                type=\"number\"\n                                className=\"form__field\"\n                                min=\"0.01\"\n                                step=\"0.01\"\n                                value={currency.value}\n                            // readOnly={true}\n                            />\n                        </label>\n                    )}\n                </fieldset>\n            </form>\n\n        </>\n    );\n};\n\nexport default Form;","import \"./style.css\";\n\nconst Footer = () => (\n    <footer className=\"footer\">Designed by Wojciech Bylica Arts</footer>\n);\n\nexport default Footer;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([\n    {\n      id: \"PLN\",\n      name: \"PLN\",\n      value: 1,\n    },\n    {\n      id: \"EUR\",\n      name: \"EUR\",\n      value: 4.45,\n    },\n    {\n      id: \"USD\",\n      name: \"USD\",\n      value: 4.2,\n    },\n    {\n      id: \"RUB\",\n      name: \"RUB\",\n      value: 0.2,\n    },\n  ]);\n\n  const [newCurrencyValue, setNewCurrencyValue] = useState();\n\n  const toggleCurrencyValue = (id) => {\n    setCurrencies(currencies => currencies.map(currency => {\n      if (currency.id === id) {\n        return { ...currency, value: newCurrencyValue };\n      }\n\n      return currency;\n    }));\n  };\n\n  const [hideRates, setHideRates] = useState(true);\n\n  const toggleHideRates = () => {\n    setHideRates(hideRates => !hideRates);\n  };\n\n  return (\n    <>\n      <Header title=\"Przelicznik walut\" />\n      <Main>\n        <Form\n          setNewCurrencyValue={setNewCurrencyValue}\n          toggleCurrencyValue={toggleCurrencyValue}\n          hideRates={hideRates}\n          toggleHideRates={toggleHideRates}\n          currencies={currencies}\n        >\n        </Form>\n      </Main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}