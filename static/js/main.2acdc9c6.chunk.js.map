{"version":3,"sources":["Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Main/index.js","Clock/styled.js","Clock/index.js","Clock/useClock.js","Form/Results/styled.js","Form/Results/index.js","Form/Buttons/styled.js","Form/Buttons/index.js","Form/styled.js","Form/index.js","Form/useForm.js","Footer/styled.js","Footer/index.js","Messenger/styled.js","Messenger/index.js","images/imageLoader.gif","images/image.png","App.js","useDataFromAPI.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["StyledDiv","styled","div","Container","children","H1","h1","Header","title","Main","Wrapper","Clock","useState","Date","currentDate","setCurrentDate","useEffect","intervalId","setInterval","clearInterval","formatDate","toLocaleDateString","undefined","month","weekday","day","year","hour","minute","second","useClock","Result","p","theme","elementBorder","elementBorderRadius","backgroundColor","white","Results","result","amount","currencyFrom","value","toFixed","currencyTo","ButtonsWrapper","Button","button","melrose","melroseHover","melroseActive","Buttons","hideRates","toggleHideRates","onClick","type","StyledForm","form","Fieldset","fieldset","mystic","FormField","select","Input","StyledSpan","span","Form","dataFromNBP","setHideRates","setAmount","setCurrencyFrom","setCurrencyTo","calculateResult","valueFrom","valueTo","setResult","useForm","date","table","onSubmit","event","preventDefault","rates","mid","code","onChange","target","name","required","Object","keys","map","currency","as","min","step","rate","StyledFooter","Footer","StyledMessenger","StyledImage","img","Messenger","body","source","alt","src","App","status","setDataFromNBP","setTimeout","a","axios","get","response","console","log","responseData","data","responseDataWithPLN","effectiveDate","no","useDataFromAPI","imageLoader","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","Body","bodyBackgroundImage","quillGray","document","getElementById"],"mappings":"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","file":"static/js/main.2acdc9c6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\n    margin: 0 auto;\n    max-width: 600px;\n`;","import { StyledDiv } from \"./styled\"\n\nconst Container = ({ children }) => (\n    <StyledDiv>\n        {children}\n    </StyledDiv>\n);\n\nexport default Container;","import styled from \"styled-components\";\n\nexport const H1 = styled.h1`\n    text-align: center;\n    margin: 0;\n    padding: 16px;\n`;","import { H1 } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <header>\n        <H1>{title}</H1>\n    </header>\n);\nexport default Header;","const Main = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\nexport default Main;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    font-size: 12px;\n    font-family: monospace;\n`;","\nimport { Wrapper } from \"./styled\";\nimport { useClock } from \"./useClock\";\n\nconst Clock = () => {\n    const {\n        currentDate,\n        formatDate,\n    } = useClock()\n\n    return (\n        <Wrapper>\n            Dzisiaj jest: {formatDate(currentDate)}\n        </Wrapper>\n    );\n};\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useClock = () => {\n    const [currentDate, setCurrentDate] = useState(new Date())\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setCurrentDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId)\n        };\n    }, [])\n\n    const formatDate = (currentDate) => currentDate.toLocaleDateString(undefined, {\n        month: \"long\",\n        weekday: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    return {\n        currentDate,\n        formatDate,\n    };\n};","import styled from \"styled-components\";\n\nexport const Result = styled.p`\n    text-align: center;\n    width: 100%;\n    border: ${({ theme }) => theme.elementBorder};\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    margin: 0px 2px;\n    background-color: ${({ theme }) => theme.backgroundColor.white};\n    word-break: break-word;\n`;","import { Result } from \"./styled\";\n\nconst Results = ({ result }) => (\n    !!result && (\n        <Result>\n            {result.amount} {result.currencyFrom} to {result.value.toFixed(2)} {result.currencyTo}\n        </Result>\n    )\n);\nexport default Results;","import styled from \"styled-components\";\n\nexport const ButtonsWrapper = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n    margin: 0;\n    background-color: ${({ theme }) => theme.backgroundColor.melrose};\n    width: 100%;\n    border: ${({ theme }) => theme.elementBorder};\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    box-shadow: 2px 2px 5px #1d1b1b;\n\n    &:hover {\n        background-color: ${({ theme }) => theme.backgroundColor.melroseHover};\n}\n    &:active {\n        background-color: ${({ theme }) => theme.backgroundColor.melroseActive};\n}\n`;","import { ButtonsWrapper, Button } from \"./styled\";\n\nconst Buttons = ({ hideRates, toggleHideRates }) => {\n    return (\n        <ButtonsWrapper>\n            <Button>Przelicz waluty</Button>\n            <Button\n                onClick={toggleHideRates}\n                type=\"button\"\n            >\n                {`${hideRates === true ? \"Pokaż\" : \"Ukryj\"}`} Kursy\n            </Button>\n        </ButtonsWrapper>\n    );\n};\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    margin: 10px 0px;\n`;\n\nexport const Fieldset = styled.fieldset`\n    width: 100%;\n    border: ${({ theme }) => theme.elementBorder};\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    background-color: ${({ theme }) => theme.backgroundColor.mystic};\n    box-shadow: 2px 2px 5px #1d1b1b;\n`;\n\nexport const FormField = styled.select`\n    margin: 5px 0;\n    width: 100%;\n    padding: 5px;\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    border: ${({ theme }) => theme.elementBorder};\n    background-color: ${({ theme }) => theme.backgroundColor.melrose};\n\n    &:hover {\n        background-color: ${({ theme }) => theme.backgroundColor.melroseHover};\n    }\n`;\n\nexport const Input = styled(FormField)`\n    background-color: ${({ theme }) => theme.backgroundColor.white};\n`;\n\nexport const StyledSpan = styled.span`\n    border-radius: ${({ theme }) => theme.elementBorderRadius};\n    border: ${({ theme }) => theme.elementBorder};\n    background-color: ${({ theme }) => theme.backgroundColor.melrose};\n`;","import Results from \"./Results\";\nimport Buttons from \"./Buttons\";\nimport { StyledForm, Fieldset, FormField, Input, StyledSpan } from './styled';\nimport { useForm } from './useForm';\nimport { Wrapper } from \"../Clock/styled\";\n\nconst Form = ({ dataFromNBP }) => {\n    const {\n        currencyFrom,\n        currencyTo,\n        setCurrencyFrom,\n        setCurrencyTo,\n        calculateResult,\n        amount,\n        setAmount,\n        setResult,\n        hideRates,\n        toggleHideRates,\n        result,\n    } = useForm()\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const valueFrom = +dataFromNBP.rates[currencyFrom].mid;\n        const valueTo = +dataFromNBP.rates[currencyTo].mid;\n        const result = calculateResult(amount, valueFrom, valueTo);\n        setResult({ amount: amount, currencyFrom: dataFromNBP.rates[currencyFrom].code, value: result, currencyTo: dataFromNBP.rates[currencyTo].code });\n        setAmount(\"\");\n    };\n    return (\n        <>\n            <Wrapper> Aktualizacja kursów: {dataFromNBP.date}</Wrapper>\n            <Wrapper>{dataFromNBP.table}</Wrapper>\n            <StyledForm onSubmit={onFormSubmit}>\n                <Fieldset>\n                    < label >\n                        Wybierz walutę do przeliczenia:\n                        <FormField\n                            value={currencyFrom}\n                            onChange={({ target }) => setCurrencyFrom(target.value)}\n                            name=\"currencyFrom\"\n                            required\n                        >\n                            {Object.keys(dataFromNBP.rates).map(currencyFrom => (\n                                <option\n                                    key={currencyFrom}\n                                    value={currencyFrom}\n                                >\n                                    {dataFromNBP.rates[currencyFrom].currency}{\" \"}{\"(\"}{dataFromNBP.rates[currencyFrom].code}{\")\"}\n                                </option>\n                            ))}\n                        </FormField>\n                    </label >\n                    < label >\n                        Wybierz walutę docelową:\n                        <FormField\n                            value={currencyTo}\n                            onChange={({ target }) => setCurrencyTo(target.value)}\n                            name=\"currencyTo\"\n                            required\n                        >\n                            {Object.keys(dataFromNBP.rates).map(currencyTo => (\n                                <option\n                                    key={currencyTo}\n                                    value={currencyTo}\n                                >\n                                    {dataFromNBP.rates[currencyTo].currency}{\" \"}{\"(\"}{dataFromNBP.rates[currencyTo].code}{\")\"}\n                                </option>\n                            ))}\n                        </FormField>\n                    </label >\n                    <label>\n                        Wpisz kwotę:\n                        <Input as=\"input\"\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            type=\"number\"\n                            min=\"0.01\"\n                            required\n                            step=\"0.01\"\n                        />\n                    </label>\n                </Fieldset>\n                <Buttons hideRates={hideRates} toggleHideRates={toggleHideRates} />\n                <Results\n                    result={result}\n                    amount={amount}\n                />\n                {!hideRates && <Fieldset>\n                    <legend><StyledSpan>Kursy walut</StyledSpan></legend>\n                    {Object.keys(dataFromNBP.rates).map(rate =>\n                        <label>\n                            {dataFromNBP.rates[rate].currency}{\" \"}{\"(\"}{dataFromNBP.rates[rate].code}{\")\"}\n                            <Input as=\"p\"\n                                key={dataFromNBP.rates[0].currency}>\n                                {dataFromNBP.rates[rate].mid}\n                            </Input>\n                        </label>\n                    )}\n                </Fieldset>\n                }\n            </StyledForm>\n        </>\n    )\n};\nexport default Form;","import { useState } from \"react\";\n\nexport const useForm = () => {\n    const [hideRates, setHideRates] = useState(true);\n    const toggleHideRates = () => {\n        setHideRates(hideRates => !hideRates);\n    };\n    const [amount, setAmount] = useState(\"\");\n    const [currencyFrom, setCurrencyFrom] = useState(\"0\");\n    const [currencyTo, setCurrencyTo] = useState(\"2\");\n    const [result, setResult] = useState();\n    const calculateResult = (amount, valueFrom, valueTo) => +amount * +valueFrom / +valueTo;\n\n    return {\n        currencyFrom,\n        currencyTo,\n        setCurrencyFrom,\n        setCurrencyTo,\n        calculateResult,\n        amount,\n        setAmount,\n        setResult,\n        hideRates,\n        toggleHideRates,\n        result,\n    };\n};","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.p`\n    text-align: center;\n    font-size: 10px;\n    background: white;\n`;","import { StyledFooter } from \"./styled\";\n\nconst Footer = () => (\n    <StyledFooter>Designed by Wojciech Bylica Arts</StyledFooter>\n);\nexport default Footer;","import styled from \"styled-components\";\n\nexport const StyledMessenger = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const StyledImage = styled.img`\n    max-width: 75%;\n`;","import { StyledMessenger, StyledImage } from \"./styled\";\n\nconst Messenger = ({ body, source, alt }) => (\n    <>\n        <StyledMessenger>\n            <p>{body}</p>\n            <StyledImage src={source} alt={alt} />\n        </StyledMessenger>\n    </>\n);\nexport default Messenger;","export default __webpack_public_path__ + \"static/media/imageLoader.b543d30c.gif\";","export default __webpack_public_path__ + \"static/media/image.761c5393.png\";","import Container from \"./Container\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Clock from \"./Clock\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport Messenger from \"./Messenger\";\nimport { useDataFromAPI } from \"./useDataFromAPI\";\nimport imageLoader from \"./images/imageLoader.gif\";\nimport image from \"./images/image.png\";\n\nfunction App() {\n  const dataFromNBP = useDataFromAPI()\n\n  return (\n    <>\n      <Container>\n        <Header title=\"Przelicznik walut\" />\n        {dataFromNBP.status === \"loading\" &&\n          <Messenger\n            body=\"Ładuję kursy walut z Narodowego Banku Polskiego...\"\n            source={imageLoader}\n            alt=\"imageLoader\"\n          />\n        }\n        {dataFromNBP.status === \"error\" &&\n          <Messenger\n            body=\"Coś poszło nie tak... Sprawdź połączenie z internetem i spróbuj ponownie!\"\n            source={image}\n            alt=\"image\"\n          />\n        }\n        {dataFromNBP.status === \"success\" &&\n          <>\n            <Main>\n              <Clock />\n              <Form dataFromNBP={dataFromNBP} />\n            </Main>\n            <Footer />\n          </>\n        }\n      </Container>\n    </>\n  );\n};\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nexport const useDataFromAPI = () => {\n    const [dataFromNBP, setDataFromNBP] = useState({\n        date: null,\n        table: null,\n        rates: null,\n        status: \"loading\",\n    })\n    useEffect(() => {\n        const getDataFromNBP = async () => {\n            try {\n                const response = await axios.get('https://api.nbp.pl/api/exchangerates/tables/a/');\n                console.log(response)\n                const responseData = response.data[0].rates;\n                const responseDataWithPLN = [\n                    {\n                        code: \"PLN\",\n                        currency: \"polski złoty\",\n                        mid: 1,\n                    },\n                    ...responseData,\n                ];\n                setDataFromNBP({\n                    date: response.data[0].effectiveDate,\n                    table: response.data[0].no,\n                    rates: responseDataWithPLN,\n                    status: \"success\",\n                });\n            } catch (error) {\n                setDataFromNBP({ status: \"error\" });\n            };\n        };\n        setTimeout(getDataFromNBP, 2000);\n    }, []);\n    return dataFromNBP;\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n${normalize}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n  background-repeat: no-repeat;\n  background-position: top; \n  background-color: ${({ theme }) => theme.backgroundColor.melrose};\n  font-family: 'Libre Franklin', sans-serif;\n  padding: 10px;\n  font-size: 16px;\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\"\nimport { GlobalStyle } from \"./GlobalStyle\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    backgroundColor: {\n        melrose: \"hsl(230deg 98% 85%)\",\n        melroseHover: \"hsl(230deg 98% 80%)\",\n        melroseActive: \"hsl(230deg 98% 75%)\",\n        white: \"white\",\n        mystic: \"rgb(231 239 239 / 75%)\",\n    },\n    Body: {\n        bodyBackgroundImage: \"url(\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Money-2180330_1920.jpg/1024px-Money-2180330_1920.jpg\\\")\",\n        quillGray: \"#e5e5e3\",\n    },\n    elementBorder: \"1px solid grey\",\n    elementBorderRadius: \"3px\",\n};"],"sourceRoot":""}