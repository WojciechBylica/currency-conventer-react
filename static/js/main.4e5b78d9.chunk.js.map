{"version":3,"sources":["Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Main/index.js","Clock/styled.js","Clock/index.js","Clock/useClock.js","Form/Results/styled.js","Form/Results/index.js","Form/Buttons/styled.js","Form/Buttons/index.js","currencies.js","Form/styled.js","Form/index.js","Form/useForm.js","Footer/styled.js","Footer/index.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["StyledDiv","styled","div","Container","children","H1","h1","Header","title","Main","Wrapper","Clock","useState","Date","currentDate","setCurrentDate","useEffect","intervalId","setInterval","clearInterval","formatDate","toLocaleDateString","undefined","month","weekday","day","year","hour","minute","second","useClock","Result","p","theme","ElementBorder","ElementBorderRadius","BackgroundColor","White","Results","result","amount","currencyFrom","value","toFixed","currencyTo","ButtonsWrapper","Button","button","Melrose","MelroseHover","MelroseActive","Buttons","hideRates","toggleHideRates","onClick","type","currencies","id","name","StyledForm","form","Fieldset","fieldset","Mystic","FormField","select","Input","StyledSpan","span","ElementBackgroundColor","Form","setHideRates","setAmount","setCurrencyFrom","setCurrencyTo","calculateResult","valueFrom","valueTo","setResult","useForm","onSubmit","event","preventDefault","find","onChange","target","required","map","currency","as","min","step","slice","defaultValue","StyledFooter","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","Body","QuillGray","BodyBackgroundImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e5b78d9.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\n    margin: 0 auto;\n    max-width: 800px;\n`;","import { StyledDiv } from \"./styled\"\n\nconst Container = ({ children }) => (\n    <StyledDiv>\n        {children}\n    </StyledDiv>\n);\n\nexport default Container;","import styled from \"styled-components\";\n\nexport const H1 = styled.h1`\n    text-align: center;\n    margin: 0;\n    padding: 16px;\n`;","import { H1 } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <header>\n        <H1>{title}</H1>\n    </header>\n);\n\nexport default Header;","const Main = ({ children }) => (\n    <main>\n        {children}\n    </main>\n);\n\nexport default Main;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    font-size: 12px;\n    font-family: monospace;\n`;","\nimport { Wrapper } from \"./styled\";\nimport { useClock } from \"./useClock\";\n\nconst Clock = () => {\n    const {\n        currentDate,\n        formatDate,\n    } = useClock()\n\n    return (\n        <Wrapper>\n            {formatDate(currentDate)}\n        </Wrapper>\n    );\n};\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useClock = () => {\n    const [currentDate, setCurrentDate] = useState(new Date())\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setCurrentDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId)\n        };\n    }, [])\n\n    const formatDate = (currentDate) => currentDate.toLocaleDateString(undefined, {\n        month: \"long\",\n        weekday: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    return {\n        currentDate,\n        formatDate,\n    };\n};","import styled from \"styled-components\";\n\nexport const Result = styled.p`\n    text-align: center;\n    width: 100%;\n    border: ${({ theme }) => theme.ElementBorder};\n    border-radius: ${({ theme }) => theme.ElementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    margin: 0px 2px;\n    background-color: ${({ theme }) => theme.BackgroundColor.White};\n    word-break: break-word;\n`;","import { Result } from \"./styled\";\n\nconst Results = ({ result }) => (\n    !!result && (\n        <Result>\n            {result.amount} {result.currencyFrom} to {result.value.toFixed(2)} {result.currencyTo}\n        </Result>\n    )\n);\n\nexport default Results;","import styled from \"styled-components\";\n\nexport const ButtonsWrapper = styled.div`\n    display: flex;\n    margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n    margin: 0;\n    background-color: ${({ theme }) => theme.BackgroundColor.Melrose};\n    width: 100%;\n    border: ${({theme}) => theme.ElementBorder};\n    border-radius: ${({theme}) => theme.ElementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n\n    &:hover {\n        background-color: ${({ theme }) => theme.BackgroundColor.MelroseHover};\n}\n    &:active {\n        background-color: ${({ theme }) => theme.BackgroundColor.MelroseActive};\n}\n`;","import { ButtonsWrapper, Button } from \"./styled\";\n\nconst Buttons = ({ hideRates, toggleHideRates }) => {\n\n    return (\n        <ButtonsWrapper>\n            <Button>Przelicz waluty</Button>\n\n            <Button\n                onClick={toggleHideRates}\n                type=\"button\"\n            >\n                {`${hideRates === true ? \"Poka≈º\" : \"Ukryj\"}`} Kursy\n            </Button>\n        </ButtonsWrapper>\n    );\n};\n\nexport default Buttons;","const currencies = [\n  {\n    id: \"PLN\",\n    name: \"PLN\",\n    value: 1,\n  },\n  {\n    id: \"EUR\",\n    name: \"EUR\",\n    value: 4.45,\n  },\n  {\n    id: \"USD\",\n    name: \"USD\",\n    value: 4.2,\n  },\n  {\n    id: \"RUB\",\n    name: \"RUB\",\n    value: 0.2,\n  },\n];\n\nexport default currencies;","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    margin: 10px 0px;\n`;\n\nexport const Fieldset = styled.fieldset`\n    width: 100%;\n    border: ${({ theme }) => theme.ElementBorder};\n    border-radius: ${({ theme }) => theme.ElementBorderRadius};\n    padding: 12px;\n    font-size: 16px;\n    background-color: ${({ theme }) => theme.BackgroundColor.Mystic}\n`;\n\nexport const FormField = styled.select`\n    margin: 5px 0;\n    width: 100%;\n    padding: 5px;\n    border-radius: ${({ theme }) => theme.ElementBorderRadius};\n    border: ${({ theme }) => theme.ElementBorder};\n    background-color: ${({ theme }) => theme.BackgroundColor.Melrose};\n\n    &:hover {\n        background-color: ${({ theme }) => theme.BackgroundColor.MelroseHover};\n    }\n`;\n\nexport const Input = styled(FormField)`\n    background-color: ${({ theme }) => theme.BackgroundColor.White};\n`;\n\nexport const StyledSpan = styled.span`\n    border-radius: ${({ theme }) => theme.ElementBorderRadius};\n    border: ${({ theme }) => theme.ElementBorder};\n    background-color: ${({ theme }) => theme.BackgroundColor.ElementBackgroundColor};\n`;","import Results from \"./Results\";\nimport Buttons from \"./Buttons\";\nimport currencies from \"../currencies\";\nimport { StyledForm, Fieldset, FormField, Input, StyledSpan } from './styled';\nimport { useForm } from './useForm';\n\nconst Form = () => {\n    const {\n        currencyFrom,\n        currencyTo,\n        calculateResult,\n        amount,\n        setAmount,\n        setResult,\n        setCurrencyFrom,\n        setCurrencyTo,\n        hideRates,\n        toggleHideRates,\n        result,\n    } = useForm()\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        const valueFrom = currencies.find(({ name }) => name === currencyFrom);\n        const valueTo = currencies.find(({ name }) => name === currencyTo);\n        const result = calculateResult(amount, valueFrom.value, valueTo.value);\n        setResult({ amount: amount, currencyFrom: currencyFrom, value: result, currencyTo: currencyTo });\n        setAmount(\"\");\n    };\n\n    return (\n        <>\n            <StyledForm onSubmit={onFormSubmit}>\n                <Fieldset>\n                    < label >\n                        Wybierz walutƒô do przeliczenia:\n                        <FormField\n                            value={currencyFrom}\n                            onChange={({ target }) => setCurrencyFrom(target.value)}\n                            name=\"currencyFrom\"\n                            required\n                        >\n                            {currencies.map(currency => (\n                                <option key={currency.id}>\n                                    {currency.id}\n                                </option>\n                            ))}\n                        </FormField>\n                    </label >\n                    < label >\n                        Wybierz walutƒô docelowƒÖ:\n                        <FormField\n                            value={currencyTo}\n                            onChange={({ target }) => setCurrencyTo(target.value)}\n                            name=\"currencyTo\"\n                            required\n                        >\n                            {currencies.map(currency => (\n                                <option key={currency.id}>\n                                    {currency.name}\n                                </option>\n                            ))}\n                        </FormField>\n                    </label >\n                    <label>\n                        Wpisz kwotƒô:\n                        <Input as=\"input\"\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            type=\"number\"\n                            min=\"0.01\"\n                            required\n                            step=\"0.01\"\n                        />\n                    </label>\n                </Fieldset>\n                <Buttons hideRates={hideRates} toggleHideRates={toggleHideRates} />\n                <Results\n                    result={result}\n                    amount={amount}\n                />\n                {!hideRates && <Fieldset>\n                    <legend><StyledSpan>Kursy walut</StyledSpan></legend>\n                    {currencies.slice(1).map(currency =>\n                        <label>\n                            {currency.name}\n                            <Input as=\"input\"\n                                onChange={(event) => currency.value = event.target.value}\n                                key={currency.id}\n                                type=\"number\"\n                                min=\"0.01\"\n                                step=\"0.01\"\n                                defaultValue={currency.value}\n                            />\n                        </label>\n                    )}\n                </Fieldset>}\n            </StyledForm>\n        </>\n    );\n};\n\nexport default Form;","import { useState } from \"react\";\nimport currencies from \"../currencies\";\n\nexport const useForm = () => {\n    const [hideRates, setHideRates] = useState(true);\n    const toggleHideRates = () => {\n        setHideRates(hideRates => !hideRates);\n    };\n    const [amount, setAmount] = useState(\"\");\n    const [currencyFrom, setCurrencyFrom] = useState(currencies[0].name);\n    const [currencyTo, setCurrencyTo] = useState(currencies[1].name);\n    const [result, setResult] = useState();\n\n    const calculateResult = (amount, valueFrom, valueTo) => +amount * +valueFrom / +valueTo;\n\n    return {\n        currencyFrom,\n        currencyTo,\n        calculateResult,\n        amount,\n        setAmount,\n        setResult,\n        setCurrencyFrom,\n        setCurrencyTo,\n        hideRates,\n        toggleHideRates,\n        result,\n    };\n};","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.p`\n    text-align: center;\n    font-size: 10px;\n    background: white;\n`;","import { StyledFooter } from \"./styled\";\n\nconst Footer = () => (\n    <StyledFooter>Designed by Wojciech Bylica Arts</StyledFooter>\n);\n\nexport default Footer;","import React from 'react';\nimport Container from \"./Container\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Clock from \"./Clock\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <Header title=\"Przelicznik walut\" />\n        <Main>\n          <Clock />\n          <Form />\n        </Main>\n        <Footer />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n${normalize}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n  background-color: ${({theme}) => theme.Body.QuillGray};\n  background-image: ${({theme}) => theme.Body.BodyBackgroundImage};\n  background-repeat: no-repeat;\n  background-position: top;\n  font-family: 'Libre Franklin', sans-serif;\n  padding: 10px;\n  font-size: 16px;\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\"\nimport { GlobalStyle } from \"./GlobalStyle\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    BackgroundColor: {\n        Melrose: \"hsl(230deg 98% 85%)\",\n        MelroseHover: \"hsl(230deg 98% 80%)\",\n        MelroseActive: \"hsl(230deg 98% 75%)\",\n        White: \"white\",\n        Mystic: \"rgb(231 239 239 / 75%)\",\n    },\n    Body: {\n        BodyBackgroundImage: \"url(\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Money-2180330_1920.jpg/1024px-Money-2180330_1920.jpg\\\")\",\n        QuillGray: \"#e5e5e3\",\n    },\n    ElementBorder: \"1px solid grey\",\n    ElementBorderRadius: \"3px\",\n};"],"sourceRoot":""}